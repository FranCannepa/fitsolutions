// Mocks generated by Mockito 5.4.4 from annotations
// in fitsolutions/test/usecase/actividad_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i11;

import 'package:cloud_firestore/cloud_firestore.dart' as _i9;
import 'package:fitsolutions/modelo/Membresia.dart' as _i8;
import 'package:fitsolutions/modelo/membresia_asignada.dart' as _i10;
import 'package:fitsolutions/providers/membresia_provider.dart' as _i7;
import 'package:fitsolutions/Utilities/shared_prefs_helper.dart' as _i2;
import 'package:flutter/material.dart' as _i4;
import 'package:flutter/src/foundation/assertions.dart' as _i12;
import 'package:flutter/src/foundation/diagnostics.dart' as _i5;
import 'package:logger/logger.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPrefsHelper_0 extends _i1.SmartFake
    implements _i2.SharedPrefsHelper {
  _FakeSharedPrefsHelper_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_1 extends _i1.SmartFake implements _i3.Logger {
  _FakeLogger_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_3 extends _i1.SmartFake implements _i4.Widget {
  _FakeWidget_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeInheritedWidget_4 extends _i1.SmartFake
    implements _i4.InheritedWidget {
  _FakeInheritedWidget_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_5 extends _i1.SmartFake
    implements _i4.DiagnosticsNode {
  _FakeDiagnosticsNode_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i5.TextTreeConfiguration? parentConfiguration,
    _i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info,
  }) =>
      super.toString();
}

/// A class which mocks [SharedPrefsHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPrefsHelper extends _i1.Mock implements _i2.SharedPrefsHelper {
  MockSharedPrefsHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> esBasico() => (super.noSuchMethod(
        Invocation.method(
          #esBasico,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> tieneSub() => (super.noSuchMethod(
        Invocation.method(
          #tieneSub,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> esPropietario() => (super.noSuchMethod(
        Invocation.method(
          #esPropietario,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> esEntrenador() => (super.noSuchMethod(
        Invocation.method(
          #esEntrenador,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> setMembresia(String? membresiaId) => (super.noSuchMethod(
        Invocation.method(
          #setMembresia,
          [membresiaId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getMembresia() => (super.noSuchMethod(
        Invocation.method(
          #getMembresia,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> setSubscripcion(String? subId) => (super.noSuchMethod(
        Invocation.method(
          #setSubscripcion,
          [subId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setGymPropietario(String? gymId) => (super.noSuchMethod(
        Invocation.method(
          #setGymPropietario,
          [gymId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getSubscripcion() => (super.noSuchMethod(
        Invocation.method(
          #getSubscripcion,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> setLoggedIn(bool? isLogged) => (super.noSuchMethod(
        Invocation.method(
          #setLoggedIn,
          [isLogged],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> getLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #getLoggedIn,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> setUserTipo(String? tipo) => (super.noSuchMethod(
        Invocation.method(
          #setUserTipo,
          [tipo],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getUserTipo() => (super.noSuchMethod(
        Invocation.method(
          #getUserTipo,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> setUserId(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> setEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #setEmail,
          [email],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> hasKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #hasKey,
          [key],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> removeKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeKey,
          [key],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> initializeData() => (super.noSuchMethod(
        Invocation.method(
          #initializeData,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getGimnasioPropietario(String? propietarioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGimnasioPropietario,
          [propietarioId],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<String?> getTrainerInfo(String? propietarioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrainerInfo,
          [propietarioId],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<Map<String, dynamic>?> getUserData(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [email],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<void> initializeBasico(Map<String, dynamic>? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeBasico,
          [userData],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> initializePropietario(Map<String, dynamic>? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializePropietario,
          [userData],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> initializeEntrenador(Map<String, dynamic>? userData) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeEntrenador,
          [userData],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [MembresiaProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockMembresiaProvider extends _i1.Mock implements _i7.MembresiaProvider {
  MockMembresiaProvider() {
    _i1.throwOnMissingStub(this);
  }

  _i2.SharedPrefsHelper get prefs => (super.noSuchMethod(
        Invocation.getter(#prefs),
        returnValue: _FakeSharedPrefsHelper_0(
          this,
          Invocation.getter(#prefs),
        ),
      ) as _i2.SharedPrefsHelper);

  _i3.Logger get log => (super.noSuchMethod(
        Invocation.getter(#log),
        returnValue: _FakeLogger_1(
          this,
          Invocation.getter(#log),
        ),
      ) as _i3.Logger);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<List<_i8.Membresia>> getMembresiasOrigen() => (super.noSuchMethod(
        Invocation.method(
          #getMembresiasOrigen,
          [],
        ),
        returnValue: _i6.Future<List<_i8.Membresia>>.value(<_i8.Membresia>[]),
      ) as _i6.Future<List<_i8.Membresia>>);

  @override
  _i6.Future<Map<String, dynamic>?> getMembresiaDetails(String? membresiaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMembresiaDetails,
          [membresiaId],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<String?> getMembershipName(String? membershipId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMembershipName,
          [membershipId],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<Map<String, dynamic>?> getOrigenMembresia(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrigenMembresia,
          [documentId],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<bool> registrarMembresia(Map<String, dynamic>? membresiaData) =>
      (super.noSuchMethod(
        Invocation.method(
          #registrarMembresia,
          [membresiaData],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<Map<String, String>> getKeys(String? gimnasioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [gimnasioId],
        ),
        returnValue: _i6.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i6.Future<Map<String, String>>);

  @override
  _i6.Future<bool> actualizarMembresia(
          Map<String, dynamic>? updatedMembresiaData) =>
      (super.noSuchMethod(
        Invocation.method(
          #actualizarMembresia,
          [updatedMembresiaData],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> eliminarMembresia(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #eliminarMembresia,
          [documentId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i9.DocumentSnapshot<Object?>?> obtenerMembresiaActiva(
          String? usuarioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #obtenerMembresiaActiva,
          [usuarioId],
        ),
        returnValue: _i6.Future<_i9.DocumentSnapshot<Object?>?>.value(),
      ) as _i6.Future<_i9.DocumentSnapshot<Object?>?>);

  @override
  _i6.Future<_i10.MembresiaAsignada?> obtenerInformacionMembresiaUser(
          String? usuarioId) =>
      (super.noSuchMethod(
        Invocation.method(
          #obtenerInformacionMembresiaUser,
          [usuarioId],
        ),
        returnValue: _i6.Future<_i10.MembresiaAsignada?>.value(),
      ) as _i6.Future<_i10.MembresiaAsignada?>);

  @override
  _i6.Future<void> cambiarEstadoMembresia(
    bool? estado,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cambiarEstadoMembresia,
          [
            estado,
            id,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  DateTime getNextMonth(DateTime? currentDate) => (super.noSuchMethod(
        Invocation.method(
          #getNextMonth,
          [currentDate],
        ),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.method(
            #getNextMonth,
            [currentDate],
          ),
        ),
      ) as DateTime);

  @override
  _i6.Future<bool> asignarMembresia(
    String? membresiaId,
    String? clienteId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #asignarMembresia,
          [
            membresiaId,
            clienteId,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BuildContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockBuildContext extends _i1.Mock implements _i4.BuildContext {
  MockBuildContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Widget get widget => (super.noSuchMethod(
        Invocation.getter(#widget),
        returnValue: _FakeWidget_3(
          this,
          Invocation.getter(#widget),
        ),
      ) as _i4.Widget);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);

  @override
  bool get debugDoingBuild => (super.noSuchMethod(
        Invocation.getter(#debugDoingBuild),
        returnValue: false,
      ) as bool);

  @override
  _i4.InheritedWidget dependOnInheritedElement(
    _i4.InheritedElement? ancestor, {
    Object? aspect,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #dependOnInheritedElement,
          [ancestor],
          {#aspect: aspect},
        ),
        returnValue: _FakeInheritedWidget_4(
          this,
          Invocation.method(
            #dependOnInheritedElement,
            [ancestor],
            {#aspect: aspect},
          ),
        ),
      ) as _i4.InheritedWidget);

  @override
  void visitAncestorElements(_i4.ConditionalElementVisitor? visitor) =>
      super.noSuchMethod(
        Invocation.method(
          #visitAncestorElements,
          [visitor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void visitChildElements(_i4.ElementVisitor? visitor) => super.noSuchMethod(
        Invocation.method(
          #visitChildElements,
          [visitor],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispatchNotification(_i4.Notification? notification) =>
      super.noSuchMethod(
        Invocation.method(
          #dispatchNotification,
          [notification],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.DiagnosticsNode describeElement(
    String? name, {
    _i12.DiagnosticsTreeStyle? style = _i12.DiagnosticsTreeStyle.errorProperty,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeElement,
          [name],
          {#style: style},
        ),
        returnValue: _FakeDiagnosticsNode_5(
          this,
          Invocation.method(
            #describeElement,
            [name],
            {#style: style},
          ),
        ),
      ) as _i4.DiagnosticsNode);

  @override
  _i4.DiagnosticsNode describeWidget(
    String? name, {
    _i12.DiagnosticsTreeStyle? style = _i12.DiagnosticsTreeStyle.errorProperty,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeWidget,
          [name],
          {#style: style},
        ),
        returnValue: _FakeDiagnosticsNode_5(
          this,
          Invocation.method(
            #describeWidget,
            [name],
            {#style: style},
          ),
        ),
      ) as _i4.DiagnosticsNode);

  @override
  List<_i4.DiagnosticsNode> describeMissingAncestor(
          {required Type? expectedAncestorType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeMissingAncestor,
          [],
          {#expectedAncestorType: expectedAncestorType},
        ),
        returnValue: <_i4.DiagnosticsNode>[],
      ) as List<_i4.DiagnosticsNode>);

  @override
  _i4.DiagnosticsNode describeOwnershipChain(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #describeOwnershipChain,
          [name],
        ),
        returnValue: _FakeDiagnosticsNode_5(
          this,
          Invocation.method(
            #describeOwnershipChain,
            [name],
          ),
        ),
      ) as _i4.DiagnosticsNode);
}
